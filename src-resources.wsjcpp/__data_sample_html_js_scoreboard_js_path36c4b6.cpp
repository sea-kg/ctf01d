// automaticly generated by wsjcpp:v0.5.1

#include "__data_sample_html_js_scoreboard_js_path36c4b6.h"

REGISTRY_WSJCPP_RESOURCE_FILE(RES___data_sample_html_js_scoreboard_js_path36c4b6)

const std::string &RES___data_sample_html_js_scoreboard_js_path36c4b6::getFilename() const {
    static const std::string s = "./data_sample/html/js/scoreboard.js";
    return s;
}
// ---------------------------------------------------------------------

const std::string &RES___data_sample_html_js_scoreboard_js_path36c4b6::getPackAs() const {
    static const std::string s = "text";
    return s;
}
// ---------------------------------------------------------------------

int RES___data_sample_html_js_scoreboard_js_path36c4b6::getBufferSize() const {
    return 24733;
}

// ---------------------------------------------------------------------

const char *RES___data_sample_html_js_scoreboard_js_path36c4b6::getBuffer() const {
    static const std::string sRet = "" // size: 24733
        "\n"
        "// init tabs\n"
        "var tabs = document.getElementsByClassName('ctf01d-tab');\n"
        "var tabs_content = document.getElementsByClassName('ctf01d-tab-content');\n"
        "function switchToTabContent() {\n"
        "    var tabcontentid = this.getAttribute('tabcontentid');\n"
        "    for (var i = 0; i < tabs.length; i++) {\n"
        "        tabs[i].classList.remove('active');\n"
        "    }\n"
        "    for (var i = 0; i < tabs_content.length; i++) {\n"
        "        tabs_content[i].style.display = '';\n"
        "    }\n"
        "    this.classList.add('active');\n"
        "    document.getElementById(tabcontentid).style.display = 'block';\n"
        "}\n"
        "for (var i in tabs) {\n"
        "    // console.log(tabs[i]);\n"
        "    tabs[i].onclick = switchToTabContent;\n"
        "}\n"
        "\n"
        "// post request to server Async\n"
        "function getAjax (url, callback) {\n"
        "    callback = callback || function(){};\n"
        "    var tmpXMLhttp = null;\n"
        "	if (window.XMLHttpRequest) {\n"
        "		// code for IE7+, Firefox, Chrome, Opera, Safari\n"
        "		tmpXMLhttp = tmpXMLhttp || new window.XMLHttpRequest();\n"
        "	};\n"
        "	tmpXMLhttp.onreadystatechange=function() {\n"
        "		if (tmpXMLhttp.readyState==4) {\n"
        "			if (tmpXMLhttp.responseText == '') {\n"
        "                // obj = { 'result' : 'fail' };\n"
        "                callback('fail', null);\n"
        "            } else {\n"
        "				try {\n"
        "					var obj = JSON.parse(tmpXMLhttp.responseText);\n"
        "                    callback(null, obj);\n"
        "                    // delete obj;\n"
        "				} catch(e) {\n"
        "					console.error(e.name + ':' + e.message + '\\n stack:' + e.stack + '\\n' + tmpXMLhttp.responseText);\n"
        "				}\n"
        "				// delete tmpXMLhttp;\n"
        "			}\n"
        "		}\n"
        "	}\n"
        "	tmpXMLhttp.open('GET', url, true);\n"
        "	tmpXMLhttp.send();\n"
        "};\n"
        "var scoreboard_content = document.getElementById('scoreboard_content');\n"
        "var loader_content = document.getElementById('loader_content');\n"
        "\n"
        "function _animateElement(el, enable) {\n"
        "    if (el == null) {\n"
        "        console.error(\"_animateElement el is null\");\n"
        "        return;\n"
        "    }\n"
        "    el.style.animation = enable ? \"blinking 0.8s reverse infinite\" : '';\n"
        "}\n"
        "\n"
        "function _animateElementOneTime(elid) {\n"
        "    var el = document.getElementById(elid)\n"
        "    if (el == null) {\n"
        "        console.error(\"_animateElementOneTime el is null by id \", elid);\n"
        "        return;\n"
        "    }\n"
        "    el.style.animation = \"fastblinking 0.8s reverse infinite\";\n"
        "    var timer2 = setTimeout(function(elid) {\n"
        "        var el1 = document.getElementById(elid);\n"
        "        if (!el1) {\n"
        "            console.err(\"el1 = \", el1, \"elid = \", elid);\n"
        "        }\n"
        "        document.getElementById(elid).style.animation = '';\n"
        "        clearTimeout(timer2);\n"
        "    },800, elid);\n"
        "}\n"
        "\n"
        "function _animateElementServiceCell(elid) {\n"
        "    var el = document.getElementById(elid)\n"
        "    if (el == null) {\n"
        "        console.error(\"_animateElementServiceCell el is null by id \", elid);\n"
        "        return;\n"
        "    }\n"
        "    var scale_val = 1.0;\n"
        "    var scale_max_val = 2.0;\n"
        "    var scale_diff = 0.4;\n"
        "    // el.style.animation = \"fastblinking 0.8s reverse infinite\";\n"
        "    var inter2 = setInterval(function(_el) {\n"
        "        if (scale_diff > 0) {\n"
        "            if (scale_val < scale_max_val) {\n"
        "                scale_val += scale_diff;\n"
        "                _el.style.transform = 'scale(1, ' + scale_val + ')';\n"
        "            } else {\n"
        "                scale_diff = -(scale_diff) / 2.0;\n"
        "            }\n"
        "        } else {\n"
        "            if (scale_val > 1.0) {\n"
        "                scale_val += scale_diff;\n"
        "                _el.style.transform = 'scale(1, ' + scale_val + ')';\n"
        "            } else {\n"
        "                _el.style.transform = '';\n"
        "                clearInterval(inter2);\n"
        "            }\n"
        "        }\n"
        "    }, 40, el);\n"
        "}\n"
        "\n"
        "function silentUpdate(elid, newValue) {\n"
        "    var el = document.getElementById(elid)\n"
        "    if (!el) {\n"
        "        console.error(\"Not found element with id \" + elid);\n"
        "        return;\n"
        "    }\n"
        "    if (el.innerHTML != newValue) {\n"
        "        el.innerHTML = newValue;\n"
        "        _animateElementOneTime(elid);\n"
        "        // TODO make simple anim\n"
        "    }\n"
        "}\n"
        "\n"
        "function silentUpdateWithoutAnimation(elid, newValue) {\n"
        "    var el = document.getElementById(elid)\n"
        "    if (!el) {\n"
        "        console.error(\"Not found element with id \" + elid);\n"
        "        return;\n"
        "    }\n"
        "    if (el.innerHTML != newValue) {\n"
        "        el.innerHTML = newValue;\n"
        "    }\n"
        "}\n"
        "\n"
        "function showActionAutomatization() {\n"
        "    var w = window.innerWidth;\n"
        "    var h = window.innerHeight;\n"
        "    var size_min_persent = 0.25;\n"
        "    var size_max_persent = 0.55;\n"
        "    var size_percent = Math.random() * (size_max_persent - size_min_persent) + size_min_persent;\n"
        "    var size_px = size_percent * w;\n"
        "    var top_px = Math.random() * (h - size_px);\n"
        "    var left_px = Math.random() * (w - size_px);\n"
        "\n"
        "    var new_id = \"mass_action_\" + Math.random()*10000;\n"
        "    document.getElementById('game_scoreboard').innerHTML +=\n"
        "        '<div id=\"' + new_id + '\" class=\"mass-action mass-action-automatization\" '\n"
        "        + ' style=\"top: ' + top_px + 'px; left: ' + left_px + 'px; width: ' + size_px + 'px; height: ' + size_px + 'px;\"'\n"
        "        + '></div>';\n"
        "\n"
        "    var timer_automatization_2 = setTimeout(function(new_id) {\n"
        "        var node = document.getElementById(new_id);\n"
        "        node.parentNode.removeChild(node);\n"
        "        clearTimeout(timer_automatization_2);\n"
        "    }, 2400, new_id);\n"
        "}\n"
        "\n"
        "function showActionFirstblood(teamId) {\n"
        "    var el = document.getElementById(teamId);\n"
        "    if (el) {\n"
        "        el.style.animation = \"team-first-blood 0.8s cubic-bezier(0, 0.6, 0.7, 1.0) infinite\";\n"
        "        var timer_first_blood_2 = setTimeout(function(teamId1) {\n"
        "            document.getElementById(teamId1).style.animation = \"\";\n"
        "            clearTimeout(timer_first_blood_2);\n"
        "        }, 2500, teamId);\n"
        "    }\n"
        "\n"
        "    var new_first_blood_id = \"mass_action_\" + Math.random()*10000;\n"
        "    var gm = document.getElementById('game_scoreboard')\n"
        "    gm.innerHTML +=\n"
        "        '<div id=\"' + new_first_blood_id + '\" class=\"mass-action mass-action-firstblood\" '\n"
        "        + ' style=\"top: 0px; left: 0px; width: 10%; height: 1%;\"'\n"
        "        + '></div>';\n"
        "\n"
        "    var timer_first_blood_1 = setTimeout(function(new_first_blood_id) {\n"
        "        var node = document.getElementById(new_first_blood_id);\n"
        "        gm.removeChild(node);\n"
        "        clearTimeout(timer_first_blood_1);\n"
        "    }, 5000, new_first_blood_id);\n"
        "}\n"
        "\n"
        "function updateUIValue(t, teamID, paramName){\n"
        "    var newValue = '';\n"
        "    if (paramName == 'points') {\n"
        "        newValue = t[paramName].toFixed(1);\n"
        "    } else {\n"
        "        newValue = '' + t[paramName];\n"
        "    }\n"
        "    var elem_id = paramName + '-' + teamID;\n"
        "    var el = document.getElementById(elem_id);\n"
        "    if (el) {\n"
        "        var prevVal = el.innerHTML;\n"
        "        if (prevVal != newValue) {\n"
        "            if (paramName == \"tries\") {\n"
        "                if (prevVal != \"\") {\n"
        "                    var diff = parseInt(newValue, 10) - parseInt(prevVal, 10);\n"
        "                    // console.log(\"diff\", diff)\n"
        "                    if (diff >= 5) {\n"
        "                        showActionAutomatization();\n"
        "                    }\n"
        "                    _animateElement(document.getElementById('tries-icon-' + teamID), true);\n"
        "                    if (diff != 0) {\n"
        "                        newValue += \" +\" + diff;\n"
        "                    }\n"
        "                }\n"
        "            }\n"
        "            document.getElementById(elem_id).innerHTML = newValue;\n"
        "        } else {\n"
        "            if (paramName == \"tries\") {\n"
        "                _animateElement(document.getElementById('tries-icon-' + teamID), false);\n"
        "            }\n"
        "        }\n"
        "        if (paramName == \"place\" && prevVal != newValue) {\n"
        "            if (newValue == \"1\") {\n"
        "                el.classList.remove('place-2st');\n"
        "                el.classList.remove('place-3st');\n"
        "                if (!el.classList.contains('place-1st')) {\n"
        "                    el.classList.add('place-1st');\n"
        "                }\n"
        "            } else if (newValue == \"2\") {\n"
        "                el.classList.remove('place-1st');\n"
        "                el.classList.remove('place-3st');\n"
        "                if (!el.classList.contains('place-2st')) {\n"
        "                    el.classList.add('place-2st');\n"
        "                }\n"
        "            } else if (newValue == \"3\") {\n"
        "                el.classList.remove('place-1st');\n"
        "                el.classList.remove('place-2st');\n"
        "                if (!el.classList.contains('place-3st')) {\n"
        "                    el.classList.add('place-3st');\n"
        "                }\n"
        "            } else {\n"
        "                el.classList.remove('place-1st');\n"
        "                el.classList.remove('place-2st');\n"
        "                el.classList.remove('place-3st');\n"
        "            }\n"
        "        }\n"
        "    } else {\n"
        "        console.error('Not found element: ' + elem_id);\n"
        "    }\n"
        "};\n"
        "\n"
        "var inSwitch = false;\n"
        "\n"
        "function switchUITeamRows(teamID1, teamID2){\n"
        "    console.log('switchUITeamRows: ' + teamID1 + ' <-> ' + teamID2);\n"
        "    if (inSwitch) {\n"
        "    /*    setTimeout(function(teamID1, teamID2){\n"
        "            switchUITeamRows(teamID1, teamID2);\n"
        "        },50);*/\n"
        "        return;\n"
        "    }\n"
        "    inSwitch = true;\n"
        "    var el1 = document.getElementById(teamID1);\n"
        "    var el2 = document.getElementById(teamID2);\n"
        "\n"
        "    el1.style.transform = 'translateY(100px)';\n"
        "    // el2.style.transform = 'translateY(-100px)';\n"
        "    var timeout1 = setTimeout(function(){\n"
        "        el2.parentNode.insertBefore(el2, el1);\n"
        "        el1.style.transform = '';\n"
        "        el2.style.transform = '';\n"
        "        inSwitch = false;\n"
        "        clearTimeout(timeout1);\n"
        "    },400);\n"
        "}\n"
        "\n"
        "function updateScoreboard() {\n"
        "    getAjax('/api/v1/scoreboard', function(err, resp){\n"
        "        if (err) {\n"
        "            document.getElementById('scoreboard_content').style.display = 'none';\n"
        "            document.getElementById('loader_content').style.display = 'block';\n"
        "            console.error(\"err = \", err, \"resp =\", resp);\n"
        "            return;\n"
        "        }\n"
        "        // console.log(resp);\n"
        "        for (var serviceId in resp.s_sta) {\n"
        "            var s = resp.s_sta[serviceId]\n"
        "            var firstBloodId = serviceId + '-first-blood';\n"
        "            var prevValue = document.getElementById(firstBloodId).innerHTML;\n"
        "            var newValue = s.first_blood;\n"
        "            for (var teamN in document.ctf01d_teams) {\n"
        "                if (document.ctf01d_teams[teamN].id == s.first_blood) {\n"
        "                    newValue = document.ctf01d_teams[teamN].name;\n"
        "                    break;\n"
        "                }\n"
        "            }\n"
        "            if (prevValue == \"-\") {\n"
        "                silentUpdateWithoutAnimation(firstBloodId, newValue);\n"
        "            } else if (prevValue != newValue) {\n"
        "                silentUpdate(serviceId + '-first-blood', newValue);\n"
        "                showActionFirstblood(s.first_blood);\n"
        "            }\n"
        "            silentUpdateWithoutAnimation(serviceId + '-all-flags-att', s.af_att)\n"
        "            silentUpdateWithoutAnimation(serviceId + '-all-flags-def', s.af_def)\n"
        "        }\n"
        "\n"
        "        // game time\n"
        "        var game_len_time = resp.game.t3 - resp.game.t0;\n"
        "        var game_passed_time = resp.game.tc - resp.game.t0;\n"
        "        // console.log(\"game_len_time\", game_len_time);\n"
        "        if (resp.game.tc < resp.game.t0) {\n"
        "            silentUpdateWithoutAnimation(\n"
        "                'game_current_time',\n"
        "                'game started after: ' + (resp.game.t0 - resp.game.tc) + ' seconds'\n"
        "            );\n"
        "            document.getElementById('game_progress_time').style.display = 'none';\n"
        "        } else if (resp.game.tc >= resp.game.t1 && resp.game.tc <= resp.game.t2) { // coffee break\n"
        "            silentUpdateWithoutAnimation(\n"
        "                'game_current_time',\n"
        "                'the game will continue after the coffee break in ' + (resp.game.t2 - resp.game.tc) + ' seconds'\n"
        "            );\n"
        "        } else if (resp.game.tc > resp.game.t3) {\n"
        "            silentUpdateWithoutAnimation('game_current_time', 'game ended');\n"
        "            document.getElementById('game_progress_time').style.display = 'block';\n"
        "            document.getElementById('game_progress_time').style.width = '100%';\n"
        "        } else if (\n"
        "            resp.game.t1 > resp.game.t0 && resp.game.t1 < resp.game.t3\n"
        "            && resp.game.t2 > resp.game.t0 && resp.game.t2 < resp.game.t3\n"
        "        ) { // coffee break enabled\n"
        "            // console.log(\"game passed_time\", (game_passed_time / game_len_time)*100);\n"
        "            document.getElementById('game_progress_time').style.display = 'block';\n"
        "            document.getElementById('game_progress_time').style.width = Math.ceil((game_passed_time / game_len_time)*100) + '%';\n"
        "            if (resp.game.tc > resp.game.t0 && resp.game.tc < resp.game.t1) { // before coffee break\n"
        "                silentUpdateWithoutAnimation(\n"
        "                    'game_current_time',\n"
        "                    'game time: ' + (resp.game.tc - resp.game.t0) + ' seconds and coffee break will start in ' + (resp.game.t1 - resp.game.tc) + ' seconds'\n"
        "                );\n"
        "                document.getElementById('game_progress_time').style.display = 'block';\n"
        "            } else if (resp.game.tc > resp.game.t2 && resp.game.tc < resp.game.t3) { // after coffee break\n"
        "                silentUpdateWithoutAnimation(\n"
        "                    'game_current_time',\n"
        "                    'game time: ' + (resp.game.tc - resp.game.t0) + ' seconds and game will end in ' + (resp.game.t3 - resp.game.tc) + ' seconds'\n"
        "                );\n"
        "            }\n"
        "        } else if (resp.game.tc > resp.game.t0 && resp.game.tc < resp.game.t3) { // before coffe break\n"
        "            silentUpdateWithoutAnimation('game_current_time', 'game time: ' + (resp.game.tc - resp.game.t0) + ' seconds, and game will end in ' + (resp.game.t3 - resp.game.tc) + ' seconds');\n"
        "            document.getElementById('game_progress_time').style.display = 'block';\n"
        "            document.getElementById('game_progress_time').style.width = Math.ceil((game_passed_time / game_len_time)*100) + '%';\n"
        "        }\n"
        "\n"
        "        var teamIDs = [];\n"
        "        for(var teamID in resp.scoreboard){\n"
        "            var t = resp.scoreboard[teamID];\n"
        "            teamIDs.push(teamID);\n"
        "            var teamLogoElemId = \"team-logo-\" + teamID;\n"
        "            var lastWriteTimeLogo = document.getElementById(teamLogoElemId).getAttribute('logo_last_updated');\n"
        "            if (lastWriteTimeLogo == \"0\") {\n"
        "                document.getElementById(teamLogoElemId).setAttribute('logo_last_updated', t.logo_last_updated);\n"
        "            } else if (lastWriteTimeLogo != t.logo_last_updated) {\n"
        "                console.warn(\"Need update logo for team \", t);\n"
        "                document.getElementById(teamLogoElemId).setAttribute('logo_last_updated', t.logo_last_updated);\n"
        "                var logoUrl = document.getElementById(teamLogoElemId).src;\n"
        "                if (logoUrl.indexOf(\"?\") !== -1) {\n"
        "                    logoUrl = logoUrl.split(\"?\")[0];\n"
        "                }\n"
        "                document.getElementById(teamLogoElemId).src = logoUrl + \"?t=\" + t.logo_last_updated;\n"
        "            }\n"
        "\n"
        "            var elPointsTrend = document.getElementById(teamID + '-points-trend');\n"
        "            var prevPoints = parseFloat(document.getElementById(teamID + '-points').innerHTML);\n"
        "            var newPoints = parseFloat(t.points.toFixed(1));\n"
        "            if (elPointsTrend.innerHTML == \"??\") {\n"
        "                elPointsTrend.classList.add(\"trend-middle\")\n"
        "                elPointsTrend.classList.remove(\"trend-up\")\n"
        "                elPointsTrend.classList.remove(\"trend-down\")\n"
        "                elPointsTrend.innerHTML = \"+0\";\n"
        "            } else {\n"
        "                if (newPoints == prevPoints) {\n"
        "                    elPointsTrend.classList.add(\"trend-middle\")\n"
        "                    elPointsTrend.classList.remove(\"trend-up\")\n"
        "                    elPointsTrend.classList.remove(\"trend-down\")\n"
        "                    elPointsTrend.innerHTML = \"+0\";\n"
        "                } else if (newPoints > prevPoints) {\n"
        "                    elPointsTrend.classList.remove(\"trend-middle\")\n"
        "                    elPointsTrend.classList.add(\"trend-up\")\n"
        "                    elPointsTrend.classList.remove(\"trend-down\")\n"
        "                    elPointsTrend.innerHTML = \"+\" + (newPoints - prevPoints).toFixed(1);\n"
        "                } else {\n"
        "                    elPointsTrend.classList.remove(\"trend-middle\")\n"
        "                    elPointsTrend.classList.remove(\"trend-up\")\n"
        "                    elPointsTrend.classList.add(\"trend-down\")\n"
        "                    elPointsTrend.innerHTML = \"-\" + (prevPoints - newPoints).toFixed(1);\n"
        "                }\n"
        "            }\n"
        "            silentUpdate(teamID + '-points', newPoints.toFixed(1));\n"
        "\n"
        "            updateUIValue(t, teamID, 'place');\n"
        "            // updateUIValue(t, teamID, 'points');\n"
        "            updateUIValue(t, teamID, 'tries');\n"
        "            for(var sService in t.ts_sta){\n"
        "                var newState = t.ts_sta[sService]['status'];\n"
        "                var newAttackFlags = t.ts_sta[sService]['att'];\n"
        "                // var newDefenceFlags = t.ts_sta[sService]['def'];\n"
        "                var newAttackPoints = t.ts_sta[sService]['pt_att'];\n"
        "                var newDefencePoints = t.ts_sta[sService]['pt_def'];\n"
        "                var newSLA = t.ts_sta[sService]['sla'];\n"
        "                var elId = 'status-' + teamID + '-' + sService;\n"
        "                var el = document.getElementById(elId);\n"
        "                if (el != null) {\n"
        "                    if (!el.classList.contains(newState)) {\n"
        "                        el.classList.remove('up');\n"
        "                        el.classList.remove('down');\n"
        "                        el.classList.remove('mumble');\n"
        "                        el.classList.remove('corrupt');\n"
        "                        el.classList.remove('shit');\n"
        "                        el.classList.remove('wait');\n"
        "                        el.classList.remove('coffeebreak');\n"
        "                        el.classList.add(newState);\n"
        "                        // _animateElementOneTime(elId);\n"
        "                        _animateElementServiceCell(elId);\n"
        "                    }\n"
        "                } else {\n"
        "                    console.error(elId + '- not found');\n"
        "                }\n"
        "                var sCell = teamID + '-' + sService;\n"
        "                // console.log(sCell);\n"
        "                silentUpdate('att-' + sCell, newAttackFlags)\n"
        "                // silentUpdate('def-' + sCell, newDefenceFlags)\n"
        "                silentUpdate('pt_att-' + sCell, newAttackPoints)\n"
        "                silentUpdateWithoutAnimation('pt_def-' + sCell, newDefencePoints)\n"
        "                silentUpdate('sla-' + sCell, newSLA + \"%\")\n"
        "            }\n"
        "        }\n"
        "\n"
        "        // sort by places\n"
        "        var elms2 = [];\n"
        "        var elms = document.getElementsByClassName('tm');\n"
        "        for(var i = 0; i < elms.length; i++){\n"
        "            var el1 = elms[i];\n"
        "            var place1 = parseInt(resp[\"scoreboard\"][el1.id]['place'], 10);\n"
        "            elms2.push({\n"
        "                e: elms[i],\n"
        "                p: place1\n"
        "            });\n"
        "        }\n"
        "        elms2.sort(function(a, b) {\n"
        "            return a.p - b.p;\n"
        "        });\n"
        "        for (var i = 0; i < elms2.length; i++) {\n"
        "            var expected_top_value = (45 + (i+1)*60) + 'px'\n"
        "            elms2[i].e.setAttribute(\"expected-top\", expected_top_value);\n"
        "            // if (elms2[i].e.style.top == '') {\n"
        "            //     elms2[i].e.style.top = expected_top_value;\n"
        "            // }\n"
        "        }\n"
        "\n"
        "        // open controls\n"
        "        if (document.getElementById('scoreboard_content').style.display != 'block') {\n"
        "            document.getElementById('scoreboard_content').style.display = 'block'\n"
        "        }\n"
        "        if (document.getElementById('loader_content').style.display != 'none') {\n"
        "            document.getElementById('loader_content').style.display = 'none';\n"
        "        }\n"
        "    });\n"
        "}\n"
        "\n"
        "// animate switching\n"
        "setInterval(function() {\n"
        "    var elms = document.getElementsByClassName('tm');\n"
        "    for (var i = 0; i < elms.length; i++) {\n"
        "        var expected_top = parseInt(elms[i].getAttribute(\"expected-top\"), 10);\n"
        "        var current_top = parseInt(elms[i].style.top, 10);\n"
        "        if (elms[i].style.top == '') {\n"
        "            current_top = 0;\n"
        "        }\n"
        "        if (expected_top == current_top) {\n"
        "            continue;\n"
        "        }\n"
        "\n"
        "        var diff = expected_top - current_top;\n"
        "        if (Math.abs(diff) < 10) {\n"
        "            current_top = expected_top;\n"
        "        } else {\n"
        "            current_top += Math.floor(diff / 10);\n"
        "        }\n"
        "        elms[i].style.top = current_top + 'px';\n"
        "        // console.log();\n"
        "    }\n"
        "}, 40);\n"
        "\n"
        "function formatGameTimings(periods) {\n"
        "    // TODO beauty print periods\n"
        "}\n"
        "\n"
        "// init scoreboard\n"
        "getAjax('/api/v1/game', function(err, resp){\n"
        "    if (err) {\n"
        "        console.error(\"Problem with game info \", err);\n"
        "        return;\n"
        "    }\n"
        "    document.getElementById('game_name').innerHTML = resp.game_name;\n"
        "\n"
        "    // TODO beauty print periods \n"
        "    if (resp.game_has_coffee_break) {\n"
        "        document.getElementById('game_time_range').innerHTML = \n"
        "            resp.game_start + ' - ' + resp.game_coffee_break_start + ' (coffee break) '\n"
        "            + resp.game_coffee_break_end + ' - ' + resp.game_end;\n"
        "    } else {\n"
        "        document.getElementById('game_time_range').innerHTML = resp.game_start + ' - ' + resp.game_end;\n"
        "    }\n"
        "\n"
        "    // console.log(resp);\n"
        "\n"
        "    // generate teams-services table\n"
        "    var sContent = \"\"\n"
        "        + \"<div class='scoreboard' id='table_scoreboard'>\"\n"
        "        + \"    <div class='hdrs'>\"\n"
        "        + \"        <div class='place'>#</div>\"\n"
        "        + \"        <div class='team-logo'></div>\"\n"
        "        + \"        <div class='team'>Team</div>\"\n"
        "        + \"        <div class='score'><div class='hdr-text'>points</div></div>\";\n"
        "    for (var i = 0; i < resp.services.length; i++) {\n"
        "        var serviceId = resp.services[i].id;\n"
        "        sContent += ''\n"
        "        + '<div class=\"service\"><b>' + resp.services[i].name + '</b><br>'\n"
        "        + '  <div class=\"service-att-def\">'\n"
        "        + '      <div class=\"service-att-def-row\">'\n"
        "        + '          <div class=\"service-att-def-cell defence-flags\" id=\"' + serviceId + '-all-flags-def\">0</div>'\n"
        "        + '          <div class=\"service-att-def-cell stollen-flags\" id=\"' + serviceId + '-all-flags-att\">0</div>'\n"
        "        + '      </div>'\n"
        "        + '      <div class=\"service-att-def-row\">'\n"
        "        + '          <div class=\"service-att-def-cell first-blood\" id=\"' + serviceId +  '-first-blood\">-</div>'\n"
        "        + '          <div class=\"service-att-def-cell round-time\">' + resp.services[i].round_time_in_sec + 's</div>'\n"
        "        + '      </div>'\n"
        "        + '  </div>'\n"
        "        + \"</div>\";\n"
        "    }\n"
        "    sContent += ''\n"
        "        + '        <div class=\"activity\">Activity</div>'\n"
        "        + '  </div>'\n"
        "        + \"  <div class='hdrs-time'>\"\n"
        "        + \"    <div class='hdrs-time-fill' id='game_progress_time'></div>\"\n"
        "        + \"    <div class='hdrs-time-game-current-time' id='game_current_time'>0</div>\"\n"
        "        + \"  </div>\";\n"
        "\n"
        "    var sTeamListSelect = '';\n"
        "\n"
        "    for (var iteam = 0; iteam < resp.teams.length; iteam++) {\n"
        "        var sTeamId = resp.teams[iteam].id;\n"
        "        document.ctf01d_teams = resp.teams;\n"
        "        sTeamListSelect += '<option value=' + sTeamId + '>' + sTeamId + '</option>';\n"
        "        sContent += \"\"\n"
        "            + \"<div class='tm' id='\" + sTeamId + \"'>\"\n"
        "            + '  <div class=\"place\" id=\"place-' + sTeamId + '\" >?</div>'\n"
        "            + \"  <div class='team-logo'><img class='team-logo' id='team-logo-\" + sTeamId + \"' logo_last_updated='0' src='\" + resp.teams[iteam].logo + \"'/></div>\"\n"
        "            + \"  <div class='team'>\"\n"
        "            + \"    <div class='team-name'>\" + resp.teams[iteam].name + \"</div>\"\n"
        "            + \"    <div class='team-ip'> id: \" + sTeamId + \", ip: \" + resp.teams[iteam].ip_address + \"</div>\"\n"
        "            + \"  </div>\"\n"
        "            + '  <div class=\"score\">'\n"
        "            + '     <div class=\"points-sum\" id=\"' + sTeamId + '-points\">0</div>'\n"
        "            + '     <div class=\"points-trend trend-down\" id=\"' + sTeamId + '-points-trend\">??</div>'\n"
        "            + '  </div>';\n"
        "\n"
        "        for (var i = 0; i < resp.services.length; i++) {\n"
        "            var sServiceID = resp.services[i].id;\n"
        "            sContent += \"\"\n"
        "            + \"<div class='service'>\"\n"
        "            + \"  <div class='service-status down' id='status-\" + sTeamId +  \"-\" + sServiceID + \"'> \"\n"
        "            + '   <div class=\"service-att-def\">'\n"
        "            + '       <div class=\"service-att-def-row\">'\n"
        "            + '           <div class=\"service-att-def-cell defence-points\" id=\"pt_def-' + sTeamId +  '-' + sServiceID + '\">0.0</div>'\n"
        "            + '           <div class=\"service-att-def-cell attack-points\" id=\"pt_att-' + sTeamId +  '-' + sServiceID + '\">0.0</div>'\n"
        "            + '       </div>'\n"
        "            + '       <div class=\"service-att-def-row\">'\n"
        "            + '           <div class=\"service-att-def-cell sla\" id=\"sla-' + sTeamId +  '-' + sServiceID + '\">0%</div>'\n"
        "            + '           <div class=\"service-att-def-cell stollen-flags\" id=\"att-' + sTeamId +  '-' + sServiceID + '\">0</div>'\n"
        "            + '       </div>'\n"
        "            + '   </div>'\n"
        "            + '  </div>'\n"
        "            + \"</div>\\n\";\n"
        "        }\n"
        "        sContent += \"\"\n"
        "            + '   <div class=\"activity\">'\n"
        "            + '      <div class=\"activity-value\" id=\"tries-' + sTeamId +  '\"></div>'\n"
        "            + '      <div class=\"activity-icon\" id=\"tries-icon-' + sTeamId +  '\"></div>'\n"
        "            + '   </div>'\n"
        "            + \"</div>\";\n"
        "    }\n"
        "    sContent += \"</div>\";\n"
        "\n"
        "    document.getElementById('scoreboard_content').innerHTML = sContent;\n"
        "    document.getElementById('team_list').innerHTML = sTeamListSelect;\n"
        "\n"
        "    updateScoreboard();\n"
        "\n"
        "    // start poling\n"
        "    setInterval(function(){\n"
        "        updateScoreboard()\n"
        "    }, 3000);\n"
        "});\n"
        ""
    ;
    return sRet.c_str();
} //::buffer() 


